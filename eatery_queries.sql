-- 1. What is the average permit duration? Which eatery has the longest permit?

create or replace function permit_duration(start_date date, end_date date)
returns numeric as
    'select end_date::date - start_date::date;'
language sql;
select permit_duration(start_date, end_date) /365.0 as permit_years from eatery;
-- select permit_duration(start_date, end_date) /365.0 as permit_years from eatery;
--       permit_years      
-- ------------------------
--      4.5479452054794521
--      4.3041095890410959
--      4.6849315068493151
--      4.6739726027397260
select avg(permit_duration(start_date, end_date) /365.0) as avg_permit_years from eatery;
--     avg_permit_years    
-- ------------------------
--  5.73331390265228796230
-- (1 row)
SELECT name, permit_number, avg(permit_duration(start_date, end_date) /365.0)
FROM eatery
group by name, permit_number
Having avg(permit_duration(start_date, end_date) /365.0)=(select max(permit_duration(start_date, end_date) /365.0) as longest 
from eatery);
--              name              | permit_number |         avg         
-- -------------------------------+---------------+---------------------
--  The Vanderbilt at South Beach | R46-R         | 24.5726027397260274
-- (1 row)

-- 2. What is the count of eateries per year based on permit start date?
select date_part('year', start_date) as year, count(date_part('year', start_date))
from eatery
group by year
order by year;
-- year | count 
-- ------+-------
--  2000 |     1
--  2002 |     1
--  2004 |     1
--  2005 |     2
--  2007 |     2
--  2008 |     1
--  2009 |     2
--  2010 |     4
--  2011 |     3
--  2012 |     7
--  2013 |     3
--  2014 |     9
--  2015 |    20
--  2016 |    46
--  2017 |    25
--  2018 |    46
--  2019 |    63
--       |     0
-- (18 rows)

-- 3. What are the names and eatery types of every eatery in the dataset?
drop table if exists eatery_type;
create table eatery_type (
    eatery_type_id text,
    name text,
    PRIMARY KEY (eatery_type_id)
);
ALTER TABLE eatery_type
ADD serial_id int GENERATED BY DEFAULT AS IDENTITY; -- PRIMARY KEY;

INSERT INTO eatery_type 
select type, name 
from (select distinct split_part(type_name,' ',1) as type, split_part(type_name,' ',2) as name
from eatery) as c;

-- INSERT 0 6
-- hw08=# select * from eatery_type;
--  eatery_type_id | name | serial_id 
-- ----------------+------+-----------
--  Mobile         | Food |         1
--  Food           | Cart |         2
--  Snack          | Bar  |         3
--  Fruit          | &    |         4
--  Specialty      | Cart |         5
--  Restaurant     |      |         6
-- (6 rows)

ALTER TABLE eatery
ADD eatery_type_id text;
ALTER TABLE eatery
   ADD CONSTRAINT fk_eatery_type_id FOREIGN KEY (eatery_type_id)
      REFERENCES eatery_type (eatery_type_id)
      ON DELETE CASCADE
      ON UPDATE CASCADE
;
UPDATE eatery AS t1 
SET eatery_type_id = t2.eatery_type_id
FROM eatery_type AS t2
WHERE split_part(t1.type_name,' ',1)  = t2.eatery_type_id;
alter table eatery drop column type_name;
SELECT * FROM eatery_type FULL OUTER JOIN eatery ON eatery.eatery_type_id = eatery_type.eatery_type_id limit 10;
-- eatery_type_id | name | serial_id |                     name                      |         location          | park_id | start_date |  end_date  | description | permit_number | phone | website | eatery_id | eatery_type_id 
-- ----------------+------+-----------+-----------------------------------------------+---------------------------+---------+------------+------------+-------------+---------------+-------+---------+-----------+----------------
--  Mobile         | Food |         1 | Woodlawn Memorial Mobile Food Truck           | Woodlawn Playground       | X092    | 2018-07-17 | 2022-12-31 |             | X96-MT        |       |         |       176 | Mobile
--  Mobile         | Food |         1 | Pugsley Park Mobile Food Truck                | Pugsley Creek Park        | X088    | 2016-06-22 | 2020-12-31 |             | X88-2-MT      |       |         |       175 | Mobile
--  Mobile         | Food |         1 | Rodmans Neck Mobile Food Truck                | Rodman's Neck             | X039    | 2016-06-22 | 2020-12-31 |             | X39-E-MT      |       |         |       174 | Mobile
--  Mobile         | Food |         1 | Mazzei Playground Trucks                      | Mazzei Playground         | X157    | 2016-06-22 | 2020-12-31 |             | X157-MT       |       |         |       173 | Mobile
--  Mobile         | Food |         1 | Watson Park Mobile Food Trucks                | Watson Gleason Playground | X124    | 2019-04-12 | 2023-12-31 |             | X124-MT       |       |         |       172 | Mobile
--  Mobile         | Food |         1 | Florence Colucci Playground Mobile Food Truck | Colucci Playground        | X122    | 2018-06-11 | 2022-12-31 |             | X122-MT       |       |         |       171 | Mobile
--  Mobile         | Food |         1 | Soundview Mobile Food Truck                   | Soundview Park            | X118    | 2019-01-01 | 2019-12-31 |             | X118-MT       |       |         |       170 | Mobile
--  Mobile         | Food |         1 | Soundview Park Mobile Food Trucks             | Soundview Park            | X118    | 2019-04-10 | 2023-12-31 |             | X118-4-MT     |       |         |       169 | Mobile
--  Mobile         | Food |         1 | Tremont Park Mobile Food Truck                | Playground Entrance       | X010A   | 2019-03-01 | 2023-12-31 |             | X10-A-MT      |       |         |       168 | Mobile
--  Mobile         | Food |         1 | Belmont Playground Mobile Food Trucks         | Belmont Playground        | B283    | 2019-03-01 | 2023-12-31 |             | X108-MT       |       |         |       167 | Mobile
-- (10 rows)

-- 4. Which eateries are a cart, and which eateries aren't a cart?

SELECT eatery_id, name, permit_number,(CASE WHEN eatery_type_id like '%Food%' or eatery_type_id like '%Fruit%' or eatery_type_id like '%Specialty%' 
 then 'Cart'
 when eatery_type_id like '%Rest%' then 'Restaurant'
 when eatery_type_id like 'Snack%' then 'Snack Bar'
 when eatery_type_id like 'Mobile%' then 'Mobile Food Truck'
 END) as whether_cart
FROM eatery;

-- eatery_id |                       name                        |    permit_number     |   whether_cart    
-- -----------+---------------------------------------------------+----------------------+-------------------
--        203 | Olmsted Cafeteria                                 | Q99-J-SB             | Snack Bar
--          1 | Central Park Food Cart                            | M10-72-1A-C          | Cart
--          2 | Central Park Food Cart                            | M10-72-3-C           | Cart
--          3 | Central Park Food Cart                            | M10-72-ED-C          | Cart
--          4 | Central Park Food Cart                            | M10-74-WD-C          | Cart
--          5 | Central Park Food Cart                            | M10-81-WD-C          | Cart
--          6 | Central Park Food Cart                            | M10-84-ED-C          | Cart
--          7 | Central Park Food Cart                            | M10-W65-C            | Cart
--          8 | Central Park Food Cart                            | M10-W67-C            | Cart
--          9 | Battery Park Food Cart                            | M5-C                 | Cart
--         10 | Frank O'connor Park Food Cart                     | Q98-C                | Cart
--         11 | Flushing Meadows Corona Park Food Cart            | Q99-(1)-C            | Cart
--         12 | Flushing Meadows Corona Park Food Cart            | Q99-2-C              | Cart
--         13 | Flushing Meadows Corona Park Food Cart            | Q99-VB5C             | Cart
--         14 | Flushing Meadows Corona Park Food Cart            | Q99-VBDC             | Cart

-- 5. Can this be easier / how many are carts, and how many are every other type?

create or replace view eatery_report as
select * from (SELECT eatery_id, name, permit_number,(CASE WHEN eatery_type_id like '%Food%' or eatery_type_id like '%Fruit%' or eatery_type_id like '%Specialty%' 
 then 'Cart'
 when eatery_type_id like '%Rest%' then 'Restaurant'
 when eatery_type_id like 'Snack%' then 'Snack Bar'
 when eatery_type_id like 'Mobile%' then 'Mobile Food Truck'
 END) as whether_cart
FROM eatery) as a where a.whether_cart = 'Cart';
-- select * from eatery_report;
--  eatery_id |                    name                    | permit_number | whether_cart 
-- -----------+--------------------------------------------+---------------+--------------
--          1 | Central Park Food Cart                     | M10-72-1A-C   | Cart
--          2 | Central Park Food Cart                     | M10-72-3-C    | Cart
--          3 | Central Park Food Cart                     | M10-72-ED-C   | Cart
--     ......
--        233 | Riverside Park Specialty Food Cart         | M71-83-CG     | Cart
--        234 | Rvierside Park Specialty Food Cart         | M71-W101-CG   | Cart
--        235 | Bowling Green Park Specialty Cart          | M7-CG         | Cart
--        236 | Dosa Specialty Food Cart                   | M98-3-CG      | Cart
--        237 | Maria Hernandez Park Food Cart             | B16-C         | Cart
-- (98 rows)
select distinct whether_cart, count(whether_cart) from (SELECT eatery_id, name, permit_number,(CASE WHEN eatery_type_id like '%Food%' or eatery_type_id like '%Fruit%' or eatery_type_id like '%Specialty%' 
 then 'Cart'
 when eatery_type_id like '%Rest%' then 'Restaurant'
 when eatery_type_id like 'Snack%' then 'Snack Bar'
 when eatery_type_id like 'Mobile%' then 'Mobile Food Truck'
 END) as whether_cart
FROM eatery) as a 
group by whether_cart;

--    whether_cart    | count 
-- -------------------+-------
--  Cart              |    98
--  Mobile Food Truck |    97
--  Restaurant        |    14
--  Snack Bar         |    28
-- (4 rows)

-- 6. How many eateries are there per borough?
-- LEFT(colName, 1)

select (case when borough = 'X' then 'Bronx'
when borough = 'B' then 'Brooklyn'
when borough = 'M' then 'Manhattan'
when borough = 'Q' then 'Queens'
when borough = 'R' then 'Staten Island' End) as borough_name, whether_cart 
from (select LEFT(park_id, 1) as borough, 
(CASE WHEN eatery_type_id like '%Food%' or eatery_type_id like '%Fruit%' or eatery_type_id like '%Specialty%' 
 then 'Cart'
 when eatery_type_id like '%Rest%' then 'Restaurant'
 when eatery_type_id like 'Snack%' then 'Snack Bar'
 when eatery_type_id like 'Mobile%' then 'Mobile Food Truck'
 END) as whether_cart from eatery) as a;

select distinct borough_name, count(borough_name) from (select (case when borough = 'X' then 'Bronx'
when borough = 'B' then 'Brooklyn'
when borough = 'M' then 'Manhattan'
when borough = 'Q' then 'Queens'
when borough = 'R' then 'Staten Island' End) as borough_name, whether_cart 
from (select LEFT(park_id, 1) as borough, 
(CASE WHEN eatery_type_id like '%Food%' or eatery_type_id like '%Fruit%' or eatery_type_id like '%Specialty%' 
 then 'Cart'
 when eatery_type_id like '%Rest%' then 'Restaurant'
 when eatery_type_id like 'Snack%' then 'Snack Bar'
 when eatery_type_id like 'Mobile%' then 'Mobile Food Truck'
 END) as whether_cart from eatery) as a) as b group by borough_name;
--  borough_name  | count 
-- ---------------+-------
--  Brooklyn      |    32
--  Manhattan     |    90
--  Staten Island |    16
--  Bronx         |    48
--  Queens        |    51
-- (5 rows)

-- 7. Can this be faster?
EXPLAIN ANALYZE select * from eatery where name = 'Pushcart';

--                                             QUERY PLAN                                             
-- ---------------------------------------------------------------------------------------------------
--  Seq Scan on eatery  (cost=0.00..15.96 rows=1 width=579) (actual time=0.040..0.081 rows=1 loops=1)
--    Filter: (name = 'Pushcart'::text)
--    Rows Removed by Filter: 236
--  Planning Time: 0.108 ms
--  Execution Time: 1.525 ms
-- (5 rows)
CREATE INDEX eatery_name ON eatery(name);
EXPLAIN ANALYZE select * from eatery where name = 'Pushcart';
--                                                       QUERY PLAN                                                      
-- ----------------------------------------------------------------------------------------------------------------------
--  Index Scan using eatery_name on eatery  (cost=0.27..8.29 rows=1 width=579) (actual time=0.091..0.093 rows=1 loops=1)
--    Index Cond: (name = 'Pushcart'::text)
--  Planning Time: 4.784 ms
--  Execution Time: 0.126 ms
-- (4 rows)

select * from eatery where name like '%ushca%';
-- explain select * from eatery where name like '%ushca%';
--                        QUERY PLAN                        
-- ---------------------------------------------------------
--  Seq Scan on eatery  (cost=0.00..15.96 rows=1 width=579)
--    Filter: (name ~~ '%ushca%'::text)
-- (2 rows)